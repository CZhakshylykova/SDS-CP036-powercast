Tetouan City Power Consumption Prediction
This project predicts power consumption for three zones in Tetouan City using machine learning models, based on the dataset Tetuan City power consumption.csv. It includes a data analysis and model training, and a Streamlit app for visualizations and predictions.
Project Structure
your-name/
├── data/
│   └── raw/
│       └── Tetuan City power consumption.csv
├── models/
├── results/
├── data-analysis.ipynb
├── app.py
├── run_app.py
├── requirements.txt
├── .gitignore
└── README.md


data/raw/Tetuan City power consumption.csv: Dataset with features (DateTime, Temperature, Humidity, Wind Speed, general diffuse flows, diffuse flows) and targets (Zone 1 Power Consumption, Zone 2 Power Consumption, Zone 3 Power Consumption). Note: Not included in the repository; download from [insert source, e.g., Kaggle] and place in data/raw/.
models/: Stores trained models, generated by data-analysis.ipynb.
data-analysis.ipynb: Notebook for data loading, cleaning, exploratory analysis, and model training.
app.py: Streamlit app for visualizing power consumption trends and predicting consumption.
run_app.py: Script to execute the notebook and run the Streamlit app with python3 run_app.py.
requirements.txt: Python dependencies.
.gitignore: Excludes data/, models/, and other irrelevant files.

Features

Data Processing: Cleans the dataset, handling missing values, negative values, and column name standardization.
Exploratory Analysis: Includes summary statistics, correlation matrix, time series plots, lagged effects, and outlier detection.
Model Training: Trains Linear Regression and Random Forest models with StandardScaler for each zone, saving the best model.
Visualizations: Displays interactive time series plots in the Streamlit app.
Predictions: Allows feature input for power consumption predictions.

Setup

Clone the Repository:
git clone <REPO_URL>
cd your-name


Create and Activate Virtual Environment:
python3 -m venv venv
source venv/bin/activate


Install Dependencies:
pip install -r requirements.txt


Ensure Dataset:

Download Tetuan City power consumption.csv from [insert source].
Place it in data/raw/.
Verify columns: DateTime, Temperature, Humidity, Wind Speed, general diffuse flows, diffuse flows, Zone 1 Power Consumption, Zone 2 Power Consumption, Zone 3 Power Consumption.



Usage

Run the Notebook and Streamlit App:python3 run_app.py


Executes data-analysis.ipynb (data analysis and model training).
Launches app.py (Streamlit app).
Opens http://localhost:8501 to view:
Time series plot for a selected zone.
Form to input features and predict power consumption.


Alternatively, run the notebook interactively:jupyter notebook





Development Notes

Redundancy: Minimized by sharing load_data and clean_data functions between data-analysis.ipynb and app.py via copy-paste.
Resolved Issues:
Fixed KeyError: 'Zone_2_Power_Consumption' with column mapping.
Fixed TypeError for model loading by handling single models and tuples.
Added StandardScaler for improved model performance.
Added run_app.py to execute notebook and run Streamlit app with python3 run_app.py.


Dependencies: Python 3.13 (Python 3.11 recommended if issues arise). See requirements.txt.

Deployment
Deploy the Streamlit app on Streamlit Cloud:

Link your GitHub repository.
Set app.py as the entry point (not run_app.py).
Ensure requirements.txt is included.
Share the app URL.

Troubleshooting

Virtual Environment Error (source: no such file or directory: venv/bin/activate):
Ensure you’re in ~/your-name.
Create: python3 -m venv venv.
Activate: source venv/bin/activate.
Use Python 3.11 if needed: brew install python@3.11; /usr/local/bin/python3.11 -m venv venv.


Graphs Not Showing: Verify data/raw/Tetuan City power consumption.csv. Run:python3 -c "import pandas as pd; print(pd.read_csv('data/raw/Tetuan City power consumption.csv').columns)"


Model Not Found: Ensure python3 run_app.py completes notebook execution.
Notebook Execution Error: Ensure nbconvert is installed (pip install nbconvert) and check error output.

Future Improvements

Add interactive plot options (e.g., time range selection).
Display model performance metrics in app.py.
Explore additional models (e.g., XGBoost).
Add feature engineering for better accuracy.

Contributors

[Your Name/Team Names]: Project setup, analysis, and Streamlit app.

For issues or contributions, create a pull request or contact the team.